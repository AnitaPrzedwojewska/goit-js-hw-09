{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAQhCC,GAPUH,EAAKE,cAAc,kBAEpBF,EAAKE,cAAc,iBAEjBF,EAAKE,cAAc,mBAGjB,IAEIF,EAAKE,cAAc,mBAGxCF,EAAKI,iBAAiB,SAAS,SAACC,GAC1BA,EAAMC,OAAOC,OAAS,GACxBC,EAAAV,GAASW,OAAOC,QAAQ,uC,IAK5BV,EAAKI,iBAAiB,UAAU,SAACC,GAC/BA,EAAMM,iBACNR,EAAa,CACXS,MAAOZ,EAAKY,MAAML,MAClBM,KAAMb,EAAKa,KAAKN,MAChBO,OAAQd,EAAKc,OAAOP,OAGtB,IAAK,IAAIQ,EAAI,EAAGA,GAAKZ,EAAWW,OAAQC,IACtCC,QAAQC,IAAI,WAAaC,OAAFH,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\nconst delay = form.querySelector(\"[name='delay']\");\n// firstDelay.setAttribute(\"entered\", \"N\");\nconst step = form.querySelector(\"[name='step']\");\n// delayStep.setAttribute('entered', 'N');\nconst amount = form.querySelector(\"[name='amount']\");\n// amount.setAttribute('entered', 'N');\n\nlet formValues = {};\n\nconst submitButton = form.querySelector(\"[type='submit']\");\n// submitButton.disabled = true;\n\nform.addEventListener('input', (event) => {\n  if (event.target.value <= 0) {\n    Notiflix.Notify.warning('Please enter a number greater than 0');\n  }\n  // submitButton.disabled = (firstDelay.value > 0) && (delayStep.value > 0) && (amount.value > 0);\n});\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  formValues = {\n    delay: form.delay.value,\n    step: form.step.value,\n    amount: form.amount.value,\n  };\n  // console.log(formValues);\n  for (let i = 1; i <= formValues.amount; i++) {\n    console.log(`Promise ${i}`);\n  }\n});\n// console.log(formValues);\n\n\n// submitButton.addEventListener('click', () => { })\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n\n  } else {\n    // Reject\n\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     const message = `✅ Fulfilled promise ${position} in ${delay}ms`;\n//     console.log(message);\n//     Notiflix.Notify.success(message);\n//   })\n//   .catch(({ position, delay }) => {\n//     const message = `❌ Rejected promise ${position} in ${delay}ms`;\n//     console.log(message);\n//     Notiflix.Notify.failure(message);\n//   });\n\n// const makePromise = (text, delay) => {\n//   return new Promise(resolve => {\n//     setTimeout(() => resolve(text), delay);\n//   });\n// };\n\n// const promiseA = makePromise('promiseA value', 1000);\n// const promiseB = makePromise('promiseB value', 3000);\n\n// Promise.all([promiseA, promiseB])\n//   .then(value => console.log(value))\n//   .catch(error => console.log(error));"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$formValues","addEventListener","event","target","value","$parcel$interopDefault","Notify","warning","preventDefault","delay","step","amount","i","console","log","concat"],"version":3,"file":"03-promises.3ea03024.js.map"}