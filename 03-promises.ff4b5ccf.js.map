{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SACtBF,EAAKE,cAAc,kBAEpBF,EAAKE,cAAc,iBAEjBF,EAAKE,cAAc,mBAKbF,EAAKE,cAAc,mBAqCxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAACH,WAAUQ,MAAAP,IAGnBG,EAAO,CAACJ,WAAUQ,MAAAP,G,GAEnBA,E,IA7CPL,EAAKa,iBAAiB,SAAS,SAACC,GAC1BA,EAAMC,OAAOC,OAAS,GACxBC,EAAAnB,GAASoB,OAAOC,QAAQ,uC,IAK5BnB,EAAKa,iBAAiB,UAAU,SAACC,GAC/BA,EAAMM,iBACN,IAAMC,EAAQrB,EAAKY,MAAMI,MACnBM,EAAOtB,EAAKuB,KAAKP,MACjBQ,EAASxB,EAAKyB,OAAOT,MACvBU,EAAI,EASR,IARAvB,EAAcuB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGC,EAACD,EAADC,EAAGC,EAAKF,EAALhB,M,OACVK,EAAAnB,GAASoB,OAAOa,QAAQ,uBAAiCC,OAARH,EAAE,QAAYG,OAANF,EAAM,M,IAEhEG,OAAM,SAAAL,G,IAAGC,EAACD,EAADC,EAAGK,EAAKN,EAALhB,M,OACXK,EAAAnB,GAASoB,OAAOiB,QAAQ,sBAAgCH,OAARH,EAAE,QAAYG,OAANE,EAAM,M,IAElER,IACOA,GAAKF,GAEVf,WAAWN,EAAcuB,EAAGL,GACzBM,MAAK,SAAAC,G,IAAGC,EAACD,EAADC,EAAGO,EAAKR,EAALhB,M,OAAYK,EAAAnB,GAASoB,OAAOa,QAAQ,uBAAiCC,OAARH,EAAE,QAAYG,OAANI,EAAM,M,IACpFH,OAAI,SAAAL,G,IAAGC,EAACD,EAADC,EAAGQ,EAAKT,EAALhB,M,OAAYK,EAAAnB,GAASoB,OAAOiB,QAAQ,sBAAgCH,OAARH,EAAE,QAAYG,OAANK,EAAM,M,IAAOf,GAC9FI,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\nconst delay = form.querySelector(\"[name='delay']\");\n// firstDelay.setAttribute(\"entered\", \"N\");\nconst step = form.querySelector(\"[name='step']\");\n// delayStep.setAttribute('entered', 'N');\nconst amount = form.querySelector(\"[name='amount']\");\n// amount.setAttribute('entered', 'N');\n\nlet formValues = {};\n\nconst submitButton = form.querySelector(\"[type='submit']\");\n// submitButton.disabled = true;\n\nform.addEventListener('input', (event) => {\n  if (event.target.value <= 0) {\n    Notiflix.Notify.warning('Please enter a number greater than 0');\n  }\n  // submitButton.disabled = (firstDelay.value > 0) && (delayStep.value > 0) && (amount.value > 0);\n});\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const delay = form.delay.value;\n  const step = form.step.value;\n  const amount = form.amount.value;\n  let i = 1;\n  createPromise(i, delay)\n    .then(({ i, delay }) =>\n      Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`)\n    )\n    .catch(({ i, delay }) =>\n      Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`)\n  );\n  i++;\n  while (i <= amount) {\n    // console.log(`Promise ${i}`);\n    setTimeout(createPromise(i, delay)\n      .then(({ i, delay }) => Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`))\n      .catch(({ i, delay }) => Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`)), step);\n    i++;\n  };\n});\n// console.log(formValues);\n\n\n// submitButton.addEventListener('click', () => { })\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position, delay});\n      } else {\n        // Reject\n        reject({position, delay});\n      }\n    }, delay)\n  })\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     const message = `✅ Fulfilled promise ${position} in ${delay}ms`;\n//     console.log(message);\n//     Notiflix.Notify.success(message);\n//   })\n//   .catch(({ position, delay }) => {\n//     const message = `❌ Rejected promise ${position} in ${delay}ms`;\n//     console.log(message);\n//     Notiflix.Notify.failure(message);\n//   });\n\n// const makePromise = (text, delay) => {\n//   return new Promise(resolve => {\n//     setTimeout(() => resolve(text), delay);\n//   });\n// };\n\n// const promiseA = makePromise('promiseA value', 1000);\n// const promiseB = makePromise('promiseB value', 3000);\n\n// Promise.all([promiseA, promiseB])\n//   .then(value => console.log(value))\n//   .catch(error => console.log(error));"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay6","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","event","target","value","$parcel$interopDefault","Notify","warning","preventDefault","delay1","step1","step","amount1","amount","i1","then","param","i","delay2","success","concat","catch","delay3","failure","delay4","delay5"],"version":3,"file":"03-promises.ff4b5ccf.js.map"}